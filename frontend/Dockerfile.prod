# --------------------------
# Multistage Build
# --------------------------

# Build environment
FROM node:alpine3.13 as build

#use env variables defined in docker compose build section, so react builds with them
ARG NODE_ENV
ENV NODE_ENV: ${NODE_ENV}

ARG REACT_APP_S3_PHOTOS_RESOURCE_URL
ENV REACT_APP_S3_PHOTOS_RESOURCE_URL: ${REACT_APP_S3_PHOTOS_RESOURCE_URL}

ARG REACT_APP_CDN_URL
ENV REACT_APP_CDN_URL: ${REACT_APP_CDN_URL}

ARG REACT_APP_PTR_MAIN_DOMAIN
ENV REACT_APP_PTR_MAIN_DOMAIN: ${REACT_APP_PTR_MAIN_DOMAIN}

ARG REACT_APP_PTR_APP_SUBDOMAIN
ENV REACT_APP_PTR_APP_SUBDOMAIN: ${REACT_APP_PTR_APP_SUBDOMAIN}

WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install --legacy-peer-deps
COPY . .
RUN npm run build

# ------------------------------------------------------
# Production Build
# ------------------------------------------------------
FROM nginx:1.19-alpine

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html

COPY --from=build /usr/src/app/build /usr/share/nginx/html
#Overriding default conf file created by nginx image
COPY --from=build /usr/src/app/nginx/templates /etc/nginx/templates
EXPOSE 80

#Nginx runs in the background, so if we don't disable daemon,
#   container will shut down immediately upon build
CMD [ "nginx", "-g", "daemon off;" ]